[user]
    name = Ben D'Angelo
    email = ben.dangelo2@gmail.com
[push]
    default = simple
[fetch]
    prune = true
[core]
    editor = vim
    exludesfile = ~/.gitignore
[color]
    ui = true
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[mergetool]
    prompt = false
[alias]
    # loggers

    # display a graph
    # view lines changes lg -p
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)[%an]%Creset' --abbrev-commit --date=relative --decorate

    # list last commits
    l = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cgreen\\ (%cr)\\ %Cblue\\ [%cn]" --decorate

    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat

    # display file changes per commit
    ls = log --pretty=format:\"%C(yellow)%h %Cgreen(%cr)%Creset %s %C(bold blue)[%cn]%Creset\" --name-status

    lf = log ORIG_HEAD.. --stat --no-merges

    # display all commits today
    lt = log --stat --since='1 Day Ago' --graph --pretty=oneline --abbrev-commit --date=relative

    # grep commit messages
    lgr = !sh -c 'git l --grep=$1 --max-count=20' - # search

    cp = cherry-pick

    pp = pull
    f = fetch

    # push new branch to remote
    pb = !git push -u origin $(git rev-parse --abbrev-ref HEAD)
    pr = !hub pull-request -m
    p = push

    a = add -A
    unstage = reset HEAD --
    untrack = rm --cached --
    undelete = !git checkout $(git rev-list -n 1 HEAD -- "$1")^ -- "$1"

    s = status -sb

    c = commit -m
    ca = commit -am
    amend = commit --amend            # rename your last commit
    uncommit = reset --soft HEAD^ # undos the last commit
    # deploy rails
    deploy = !git checkout master && git pull && git merge dev && git push && rake deploy
    production = !git checkout master && git pull && git merge dev && git push && git push production master
    staging = !git checkout dev && git pull && git push staging dev:master

    # changing branches
    ch = checkout
    chb = checkout -b
    master = checkout master
    dev = checkout dev
    de = checkout development
    rc = checkout rc

    # dealing with branches
    b = branch -v
    ba = branch -av
    rmb = !sh -c 'git branch -d $1 && git push origin :$1' - # remove branch from local and remote

    # diffs
    diff = diff --word-diff
    ds = diff --cached # show diff of what has been added to staging
    dc = diff HEAD # show what changed since last commit
    dl = diff HEAD^                 # show what has changed since the commit before the latest commit
    # show diff of last commit of given branch
    dr  = "!f() { git diff "$1"^.."$1"; }; f"
    d = diff # Show what has changed but haven't been added to the index yet

    # reset file
    rf = checkout --

    # reset everything
    ra = reset --hard
    rh = reset --hard @{u}

    r = reset

    unmerge = reset --merge ORIG_HEAD
    assume   = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed  = "!git ls-files -v | grep ^h | cut -c 3-"

    # fetch and show what would be merged (use option "-p" to see patch)
    incoming = "!git remote update -p; git log ..@{u}"
    # what would be pushed (currently committed); see also alias difr
    outgoing = log @{u}..

    ours = "!f() { git checkout --ours $@ && git add $@; }; f"
    theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"

    # random stuff
    who = shortlog -n -s --no-merges
    snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
    me = config user.name

    # display all aliases
    alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\t=> \\2/' | sort
    ignore=!([ ! -e .gitignore ] && touch .gitignore) | echo $1 >>.gitignore
    ignored = status --ignored
    conflicts = diff --name-only --diff-filter=U

    # remove dead remote branches, cleanup files, remove untracked files, clear stash
    cleanup = !git remote prune origin && git gc && git clean -df && git stash clear

