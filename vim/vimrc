set t_Co=256

set nocompatible              " be iMproved, required
filetype off                  " required
syntax on
"set mouse=a
" Auto indent
filetype indent on
filetype plugin indent on
set list
set list listchars=tab:»·,trail:·

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#rc()
let g:solarized_termcolors=256
set wildignore=*.o,*.obj,*.bak,*.exe,*.py[co],*.swp,*~,*.pyc,.svn,.git

set pastetoggle=<F10>
set number
set cursorline
set noswapfile
set autoindent
set hlsearch
set ignorecase
set smartcase
set nobackup
set laststatus=2
set ttimeoutlen=50
" a combination of spaces and tabs are used to simulate tab stops at a width
" other than the (hard)tabstop
set softtabstop=4
set smarttab
set expandtab
set shiftwidth=4
set complete=.,b,u,]

augroup vimrcEx
  autocmd!

  " When editing a file, always jump to the last known cursor position.
  " Don't do it for commit messages, when the position is invalid, or when
  " inside an event handler (happens when dropping a file on gvim).
  autocmd BufReadPost *
    \ if &ft != 'gitcommit' && line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif

  " Set syntax highlighting for specific file types
  autocmd BufRead,BufNewFile *.md set filetype=markdown

  " Enable spellchecking for Markdown
  autocmd FileType markdown setlocal spell

  " Automatically wrap at 80 characters for Markdown
  autocmd BufRead,BufNewFile *.md setlocal textwidth=80
augroup END

" gvim
if has('gui_running')
    set go-=T
    set guifont=Liberation\ Mono\ 8
    set go-=r
    set go-=L
endif

call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'gmarik/vundle'
Plugin 'tommcdo/vim-ninja-feet'
Plugin 'kchmck/vim-coffee-script'
Plugin 'tommcdo/vim-exchange'
Plugin 'wellle/targets.vim'
Plugin 'ervandew/supertab'
Plugin 'michaeljsmith/vim-indent-object'
Plugin 'henrik/vim-qargs'
Plugin 'tpope/vim-sensible'
Plugin 'jdonaldson/vaxe'
Plugin 'altercation/vim-colors-solarized'
Plugin 'plasticboy/vim-markdown'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-rails.git'
Plugin 'scrooloose/nerdtree.git'
Plugin 'scrooloose/nerdcommenter'
Plugin 'L9'
Plugin 'justinmk/vim-sneak'
Plugin 'morhetz/gruvbox'
Plugin 'ConradIrwin/vim-bracketed-paste'
" Plugin 'Lokaltog/vim-easymotion'
Plugin 'groenewege/vim-less'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'kien/ctrlp.vim.git'
Plugin 'tomtom/tcomment_vim'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'flazz/vim-colorschemes'
Plugin 'https://github.com/mileszs/ack.vim.git'
Plugin 'vim-scripts/a.vim'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'scrooloose/syntastic'
call vundle#end()

let g:ctrlp_custom_ignore = 'bower_components\|build\|dist\|docs\|export\|node_modules\|DS_Store\|git'
let g:ctrlp_working_path_mode = 2
let g:ctrlp_max_depth = 5

nnoremap <leader>b :CtrlPBuffer<CR>
nnoremap <leader>T :CtrlPBufTag<CR>
nnoremap <leader>t :CtrlPTag<CR>
nnoremap <leader>F :CtrlPCurWD<CR>
nnoremap <leader>r :CtrlPMRUFiles<CR>
nnoremap <leader>m :CtrlPMixed<CR>
nnoremap <leader>l :CtrlPLine<CR>

nnoremap <leader>aa :A<CR>
nnoremap <leader>av :AV<CR>
nnoremap <leader>at :AT<CR>

" Shortcuts
map gb :NERDTreeToggle<CR>
nmap <silent> g/ :nohlsearch<CR>

" force save
cmap w!! w !sudo tee % >/dev/null

imap jk <Esc>
map <leader>s :so $MYVIMRC<CR>
map <leader>ev :vs $MYVIMRC<CR>
map <leader>eb :vs ~/.bashrc<CR>
map <leader>eg :vs ~/.gitconfig<CR>
map <leader>es :vs ~/.ssh/config<CR>
map <leader>eh :vs /etc/hosts<CR>

" format the entire file
nmap <leader>fef ggVG=
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
noremap <tab> <c-w><c-w>
nmap Y y$
nmap zh ^
nmap zl $

" strip all trailing whitespace in the current file
nnoremap <leader>w :%s/\s\+$//<cr>:let @/=''<CR>
" reselect the text that was just pasted
nnoremap gV `[v`]

if executable("ag")
    let g:ackprg = 'ag --nogroup --nocolor --column -U'

    " Use Ag over Grep
    set grepprg=ag\ --nogroup\ --nocolor\ -U\ --skip-vcs-ignores

    " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
    let g:ctrlp_user_command = 'ag %s -l --nocolor -g "" -U'

    " ag is fast enough that CtrlP doesn't need to cache
    " let g:ctrlp_use_caching = 0
endif

colorscheme default
set background=dark

" automatic formatting
autocmd BufWritePre *.slim :%s/\s\+$//e
autocmd BufWritePre *.rb :%s/\s\+$//e
autocmd BufWritePre *.hx :%s/\s\+$//e

au BufReadPost *.hxp set syntax=haxe
au BufReadPost *.hx set syntax=haxe
au BufReadPost *.md set syntax=markdown
au BufReadPost *.less set syntax=less
au BufReadPost *.coffee set syntax=coffee
" reload file on vim focus and buf enter
au CursorHold * checktime

" Treat <li> and <p> tags like the block tags they are
let g:html_indent_tags = 'li\|p'

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

let g:syntastic_check_on_open=1
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-"]
